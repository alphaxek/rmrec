"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TsdError = void 0;
const ts = require("@tsd/typescript");
const isDiagnosticWithLocation_1 = require("./isDiagnosticWithLocation");
function formatMassageAndLocation(diagnostic) {
    const message = ts.flattenDiagnosticMessageText(diagnostic.messageText, "\n");
    if ((0, isDiagnosticWithLocation_1.isDiagnosticWithLocation)(diagnostic)) {
        const { file, start } = diagnostic;
        const { line, character } = file.getLineAndCharacterOfPosition(start);
        const location = `at ${file.fileName}:${line + 1}:${character + 1}`;
        return { message, location };
    }
    return { message };
}
class TsdError extends Error {
    constructor(diagnostic, name) {
        const { message, location } = formatMassageAndLocation(diagnostic);
        super(message);
        this.name = name;
        this.stack = [`${this.name}: ${this.message}`, location]
            .filter((line) => line !== undefined)
            .join("\n    ");
    }
}
exports.TsdError = TsdError;
